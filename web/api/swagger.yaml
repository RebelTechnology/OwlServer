swagger: '2.0'
info:
  title: OWL server API
  description: Exposes OWL patch data over a REST API.
  version: 1.0.0
  contact:
    name: Sam Artuso
host: 'hoxtonowl.localhost:3000'
schemes:
  - http
basePath: /
consumes:
  - application/json
produces:
  - application/json
paths:
  /patches:
    get:
      summary: Return summary of all public patches.
      operationId: get_patches
      description: >
        Returns a summary of all public patches.
        
        
        Private patches are not returned by this API call.
        
        
        To retrieve all the available fields for a certain patch, use `GET /patches/{patchId}`.
      parameters:
        - name: author.name
          in: query
          description: Name of the author of the patch.
          required: false
          type: string
      tags:
        - patches
      responses:
        '200':
          description: A summary of all public patches, alphabetically sorted by patch name.
          schema:
            type: object
            required:
              - count
              - result
            properties:
              count:
                type: integer
                description: The total number of public patches.
              result:
                type: array
                items:
                  $ref: '#/definitions/PatchSummary'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/GeneralError'
  /authors:
    get:
      summary: List all authors.
      operationId: get_authors
      description: Returns a list of all authors.
      tags:
        - authors
      responses:
        '200':
          description: A list of all authors, alphabetically sorted.
          schema:
            type: object
            required:
              - count
              - result
            properties:
              count:
                type: integer
                description: The total number of authors.
              result:
                type: array
                items:
                  $ref: '#/definitions/PatchAuthor'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/GeneralError'
  /tags:
    get:
      summary: List all tags.
      operationId: get_tags
      description: Returns a list of all tags.
      tags:
        - tags
      responses:
        '200':
          description: A list of all tags, alphabetically sorted.
          schema:
           type: object
           required:
             - count
             - result
           properties:
             count:
               type: integer
               description: The total number of tags.
             result:
               type: array
               items:
                 type: string
definitions:
  PatchSummary:
    type: object
    required:
      - _id
      - author
      - creationTimeUtc
      - name
      - seoName
    properties:
      _id:
        type: string
        description: The patch ID.
      author:
        type: object
        $ref: '#/definitions/PatchAuthor'
      creationTimeUtc:
        type: integer
        description: 'The time when the patch was created, expressed in seconds since the UNIX epoch.'
      name:
        type: string
        description: The name of the patch.
      seoName:
        type: string
        description: An SEO-friendly name for the patch.
  PatchAuthor:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the author of the patch.
      url:
        type: string
        format: uri
        description: The author's URL.
      type:
        type: string
        description: Used internally. The only possible value for this field is `wordpress` at the moment.
      wordpressId:
        type: integer
        description: Used internally. The ID of the WordPress user the patch belongs to.
  GeneralError:
    type: object
    required:
      - message
    properties:
      message:
        type: string
